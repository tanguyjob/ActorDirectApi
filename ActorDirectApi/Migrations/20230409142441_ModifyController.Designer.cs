// <auto-generated />
using System;
using ActorDirectApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ActorDirectApi.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230409142441_ModifyController")]
    partial class ModifyController
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActorDirectApi.Entities.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Street")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("AddressId");

                    b.HasIndex("CandidateId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("ActorDirectApi.Entities.Candidate", b =>
                {
                    b.Property<int>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CandidateId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("CandidateId");

                    b.ToTable("Candidate");
                });

            modelBuilder.Entity("ActorDirectApi.Entities.CandidateSchool", b =>
                {
                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("SchoolId", "CandidateId");

                    b.HasIndex("CandidateId");

                    b.ToTable("CandidateSchool");
                });

            modelBuilder.Entity("ActorDirectApi.Entities.CandidateSkill", b =>
                {
                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.HasKey("SkillId", "CandidateId");

                    b.HasIndex("CandidateId");

                    b.ToTable("CandidateSkill");
                });

            modelBuilder.Entity("ActorDirectApi.Entities.Corpulence", b =>
                {
                    b.Property<int>("CorpulenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CorpulenceId"));

                    b.Property<string>("CorpulenceName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("CorpulenceId");

                    b.ToTable("Corpulence");
                });

            modelBuilder.Entity("ActorDirectApi.Entities.Physique", b =>
                {
                    b.Property<int>("PhysiqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhysiqueId"));

                    b.Property<int>("Breast")
                        .HasColumnType("int");

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("CorpulenceId")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Hip")
                        .HasColumnType("int");

                    b.Property<DateTime>("MensurationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MensurationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Waist")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("PhysiqueId");

                    b.HasIndex("CandidateId");

                    b.HasIndex("CorpulenceId");

                    b.ToTable("Physique");
                });

            modelBuilder.Entity("ActorDirectApi.Entities.School", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchoolId"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("SchoolId");

                    b.ToTable("School");
                });

            modelBuilder.Entity("ActorDirectApi.Entities.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillId"));

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("SkillId");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("ActorDirectApi.Entities.Address", b =>
                {
                    b.HasOne("ActorDirectApi.Entities.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("ActorDirectApi.Entities.CandidateSchool", b =>
                {
                    b.HasOne("ActorDirectApi.Entities.Candidate", "Candidate")
                        .WithMany("CandidateSchool")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ActorDirectApi.Entities.School", "School")
                        .WithMany("CandidateSchool")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("School");
                });

            modelBuilder.Entity("ActorDirectApi.Entities.CandidateSkill", b =>
                {
                    b.HasOne("ActorDirectApi.Entities.Candidate", "Candidate")
                        .WithMany("CandidateSkill")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ActorDirectApi.Entities.Skill", "Skill")
                        .WithMany("CandidateSkill")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("ActorDirectApi.Entities.Physique", b =>
                {
                    b.HasOne("ActorDirectApi.Entities.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ActorDirectApi.Entities.Corpulence", "Corpulence")
                        .WithMany()
                        .HasForeignKey("CorpulenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Corpulence");
                });

            modelBuilder.Entity("ActorDirectApi.Entities.Candidate", b =>
                {
                    b.Navigation("CandidateSchool");

                    b.Navigation("CandidateSkill");
                });

            modelBuilder.Entity("ActorDirectApi.Entities.School", b =>
                {
                    b.Navigation("CandidateSchool");
                });

            modelBuilder.Entity("ActorDirectApi.Entities.Skill", b =>
                {
                    b.Navigation("CandidateSkill");
                });
#pragma warning restore 612, 618
        }
    }
}
